{"version":3,"sources":["components/HeroList/Hero/Hero.js","components/Team/Member/Member.js","components/Team/Team.js","components/Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["Hero","hero","banHero","isBanned","undefined","heroid","className","onClick","e","style","backgroundImage","renderImage","Member","member","teamId","saveMember","removeMember","randomPosition","onTyping","positions","Card","saved","CardBody","CardTitle","color","fontWeight","textShadow","name","Button","id","heroe","FormGroup","Label","for","Input","type","value","onChange","placeholder","Team","data","addMember","Badge","outline","members","map","key","Menu","randomHero","toggleSameHero","randomTeam","randomTeamAndHero","randomPositions","randomAll","samehero","App","props","team","state","teamA","teamB","position","length","push","setState","preventDefault","target","filter","herolist","randomAlgor","console","log","Amembers","Bmembers","temp","filtered","job","parseInt","Math","floor","random","count","players","shuffled","shuffle","player","index","halfWayThough","ceil","slice","a","ban","array","rand","result","Array","this","bind","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gZAqBeA,EARF,SAAC,GAIP,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OAAOF,EAhBW,SAACA,EAAMC,EAASC,GAClC,YAAmBC,IAAhBH,EAAKI,OAEJ,yBAAKC,UAAU,WAAWC,QAAS,SAAAC,GAAC,OAAIN,EAAQM,EAAGP,EAAKI,OAAQF,IAAWM,MAAO,CAACC,gBAAgB,+DAAD,OAAiET,EAAKI,OAAtE,YAC9FF,EAAW,yBAAKG,UAAU,UAAf,IAAyB,uBAAGA,UAAU,6BAAtC,KAA8E,IAI1F,GAQOK,CAAYV,EAAMC,EAASC,GAAY,sBCwCxCS,EAtDA,SAAC,GAQT,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,OACAC,EAKI,EALJA,WAEAC,GAGI,EAJJC,eAII,EAHJD,cACAE,EAEI,EAFJA,SAEI,EADJC,UAEA,OACE,yBAAKb,UAAU,QACb,kBAACc,EAAA,EAAD,KACMP,EAAOQ,MACP,kBAACC,EAAA,EAAD,KACE,yBAAKhB,UAAU,kCACb,6BAEE,kBAACiB,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAM,OAASC,WAAW,OAAQC,WAAW,oBAAqBb,EAAOc,MAG7F,kBAACC,EAAA,EAAD,CAAQrB,QAAS,kBAAMQ,EAAWF,EAAOgB,GAAIf,KAA7C,QACA,kBAACc,EAAA,EAAD,CAAQrB,QAAS,kBAAMS,EAAaH,EAAOgB,GAAIf,IAASR,UAAU,OAAOkB,MAAM,UAA/E,IAAyF,uBAAGlB,UAAU,gBAAtG,MAEJ,kBAAC,EAAD,CAAMA,UAAU,eAAeL,KAAMY,EAAOiB,UAK9C,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOR,KAAK,OAAOS,MAAOvB,EAAOc,KAAMU,SAAU,SAAA7B,GAAC,OAAIU,EAASV,EAAG,OAAQK,EAAOgB,GAAIf,IAASwB,YAAY,UAWxH,kBAACV,EAAA,EAAD,CAAQrB,QAAS,kBAAMQ,EAAWF,EAAOgB,GAAIf,IAASU,MAAM,WAA5D,YCdCe,EA5BF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACArB,EAMI,EANJA,UACAD,EAKI,EALJA,SACAD,EAII,EAJJA,eACAD,EAGI,EAHJA,aACAD,EAEI,EAFJA,WACA0B,EACI,EADJA,UAEA,OACE,yBAAKnC,UAAU,QACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,eACZ,kBAACoC,EAAA,EAAD,CAAOlB,MAAOgB,EAAKhB,OAASgB,EAAKb,OAEnC,kBAACC,EAAA,EAAD,CAAQJ,MAAM,UAAUmB,SAAO,EAACpC,QAAS,kBAAMkC,EAAUD,EAAKX,MAA9D,iBAEF,yBAAKvB,UAAU,QAEXkC,EAAKI,QAAUJ,EAAKI,QAAQC,KAAI,SAAAhC,GAC9B,OAAO,kBAAC,EAAD,CAAQC,OAAQ0B,EAAKX,GAAIV,UAAWA,EAAWD,SAAUA,EAAUF,aAAcA,EAAcD,WAAYA,EAAYE,eAAgBA,EAAgB6B,IAAKjC,EAAOgB,GAAIhB,OAAQA,OACnL,MCAAkC,EAtBF,SAAC,GAQR,EAPJC,WAOI,EANJC,eAMK,IALLC,EAKI,EALJA,WAKI,EAJJC,kBAII,EAHJC,gBAGI,EAFJC,UAEI,EADJC,SAEA,OACE,yBAAKhD,UAAU,wCAEb,6BAEA,kBAACsB,EAAA,EAAD,CAAQtB,UAAU,OAAOkB,MAAM,UAAUjB,QAAS,kBAAM2C,MAAxD,kBCVA/B,EAAY,CAChB,OACA,UACA,SACA,OACA,QACA,WA2VaoC,E,kDAtVb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRf,UAAY,SAACgB,GAAU,IAAD,EACK,EAAKC,MAAtBC,EADY,EACZA,MAAOC,EADK,EACLA,MAET/C,EAAS,CACbc,KAAM,GACNkC,SAAU,EACVxC,OAAO,EACPS,MAAO,IAGI,IAAT2B,GACF5C,EAAOgB,GAAK8B,EAAMf,QAAQkB,OAAS,EACnCH,EAAMf,QAAQmB,KAAKlD,GACnB,EAAKmD,SAAS,CACZL,YAGF9C,EAAOgB,GAAK+B,EAAMhB,QAAQkB,OAAS,EACnCF,EAAMhB,QAAQmB,KAAKlD,GACnB,EAAKmD,SAAS,CACZJ,YA1Ca,EA+CnB1C,SAAW,SAACV,EAAGsC,EAAKjB,EAAI4B,GACtBjD,EAAEyD,iBAD6B,MAEN,EAAKP,MAAtBC,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,MAEF,IAATH,GACFE,EAAMf,QAAUe,EAAMf,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAOiC,GAAOtC,EAAE0D,OAAO9B,OAElBvB,KAET,EAAKmD,SAAS,CACZL,YAGFC,EAAMhB,QAAUgB,EAAMhB,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAOiC,GAAOtC,EAAE0D,OAAO9B,OAElBvB,KAET,EAAKmD,SAAS,CACZJ,YArEa,EA0EnB7C,WAAa,SAACc,EAAI4B,GAAU,IAAD,EACA,EAAKC,MAAtBC,EADiB,EACjBA,MAAOC,EADU,EACVA,MAEF,IAATH,GACFE,EAAMf,QAAUe,EAAMf,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAM,OAAaA,EAAOQ,OAErBR,KAET,EAAKmD,SAAS,CACZL,YAGFC,EAAMhB,QAAUgB,EAAMhB,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAM,OAAaA,EAAOQ,OAErBR,KAET,EAAKmD,SAAS,CACZJ,YA/Fa,EAoGnB5C,aAAe,SAACa,EAAI4B,GAAU,IAAD,EACF,EAAKC,MAAtBC,EADmB,EACnBA,MAAOC,EADY,EACZA,MAEF,IAATH,GACFE,EAAMf,QAAUe,EAAMf,QAAQuB,QAAO,SAAAtD,GAAM,OAAIA,EAAOgB,KAAOA,KAC7D,EAAKmC,SAAS,CACZL,YAGFC,EAAMhB,QAAUgB,EAAMhB,QAAQuB,QAAO,SAAAtD,GAAM,OAAIA,EAAOgB,KAAOA,KAC7D,EAAKmC,SAAS,CACZJ,YA/Ga,EAoHnBZ,WAAa,WAAO,IAAD,EAC4B,EAAKU,MAA1CU,EADS,EACTA,SAAUd,EADD,EACCA,SAAUK,EADX,EACWA,MAAOC,EADlB,EACkBA,MACnC,EAAKS,YAAYV,EAAMf,QAASgB,EAAMhB,QAASwB,EAAUd,GACzDgB,QAAQC,IAAIZ,EAAOC,GACnB,EAAKI,SAAS,CACZL,QACAC,WA1He,EA8HnBS,YAAc,SAACG,EAAUC,EAAUL,EAAUd,GAG3C,GAFAgB,QAAQC,IAAIjB,GAERA,EAAU,CAEZ,IAAMoB,EAAON,EAEbI,EAAWA,EAAS3B,KAAI,SAAAhC,GACtB,IAAM8D,EAAWP,EAASD,QAAO,SAAAlE,GAAI,OAAKA,EAAK2E,MAASC,SAAShE,EAAOgD,UAAY,KAKpF,OAJAhD,EAAOiB,MAAQ6C,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASb,SAC5DM,EAAWA,EAASD,QAAO,SAAAlE,GACzB,OAAOY,EAAOiB,OAAS7B,EAAKI,SAAWQ,EAAOiB,MAAMzB,UAE/CQ,KAGTuD,EAAWM,EAEXD,EAAWA,EAAS5B,KAAI,SAAAhC,GACtB,IAAM8D,EAAWP,EAASD,QAAO,SAAAlE,GAAI,OAAKA,EAAK2E,MAASC,SAAShE,EAAOgD,UAAY,KAKpF,OAJAhD,EAAOiB,MAAQ6C,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASb,SAC5DM,EAAWA,EAASD,QAAO,SAAAlE,GACzB,OAAOY,EAAOiB,OAAS7B,EAAKI,SAAWQ,EAAOiB,MAAMzB,UAE/CQ,UAIT2D,EAAWA,EAAS3B,KAAI,SAAAhC,GACtB,IAAM8D,EAAWP,EAASD,QAAO,SAAAlE,GAAI,OAAKA,EAAK2E,MAASC,SAAShE,EAAOgD,UAAY,KAKpF,OAJAhD,EAAOiB,MAAQ6C,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASb,SAC5DM,EAAWA,EAASD,QAAO,SAAAlE,GACzB,OAAOY,EAAOiB,OAAS7B,EAAKI,SAAWQ,EAAOiB,MAAMzB,UAE/CQ,KAGT4D,EAAWA,EAAS5B,KAAI,SAAAhC,GACtB,IAAM8D,EAAWP,EAASD,QAAO,SAAAlE,GAAI,OAAKA,EAAK2E,MAASC,SAAShE,EAAOgD,UAAY,KAKpF,OAJAhD,EAAOiB,MAAQ6C,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASb,SAC5DM,EAAWA,EAASD,QAAO,SAAAlE,GACzB,OAAOY,EAAOiB,OAAS7B,EAAKI,SAAWQ,EAAOiB,MAAMzB,UAE/CQ,KAGX,EAAKmD,SAAS,CACZL,MAAOa,EACPZ,MAAOa,IAETH,QAAQC,IAAI,OAAQH,IAhLH,EAmMnBnD,eAAiB,SAACY,EAAI4B,GAAU,IAAD,EACJ,EAAKC,MAAtBC,EADqB,EACrBA,MAAOC,EADc,EACdA,MAEF,IAATH,GACFE,EAAMf,QAAUe,EAAMf,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAOgD,SAAWiB,KAAKC,MAAsB,EAAhBD,KAAKE,WAE7BnE,KAET,EAAKmD,SAAS,CACZL,YAGFC,EAAMhB,QAAUgB,EAAMhB,QAAQC,KAAI,SAAAhC,GAIhC,OAHIA,EAAOgB,KAAOA,IAChBhB,EAAOgD,SAAWiB,KAAKC,MAAsB,EAAhBD,KAAKE,WAE7BnE,KAET,EAAKmD,SAAS,CACZJ,YAxNa,EA6NnBR,gBAAkB,WAAO,IAAD,EACG,EAAKM,MAAtBC,EADc,EACdA,MAAOC,EADO,EACPA,MACfD,EAAMf,QAAUe,EAAMf,QAAQC,KAAI,SAAAhC,GAEhC,OADAA,EAAOgD,SAAWiB,KAAKC,MAAsB,EAAhBD,KAAKE,UAC3BnE,KAET+C,EAAMhB,QAAUgB,EAAMhB,QAAQC,KAAI,SAAAhC,GAEhC,OADAA,EAAOgD,SAAWiB,KAAKC,MAAsB,EAAhBD,KAAKE,UAC3BnE,KAGT,EAAKmD,SAAS,CACZL,QACAC,WA1Oe,EA8OnBX,eAAiB,WACf,EAAKe,SAAS,CACZV,UAAW,EAAKI,MAAMJ,YAhPP,EAoPnBJ,WAAa,WAAO,IAAD,EACe,EAAKQ,MAA7BC,EADS,EACTA,MAAOC,EADE,EACFA,MAAOqB,EADL,EACKA,MAChBC,EAAO,sBAAOvB,EAAMf,SAAb,YAAyBgB,EAAMhB,UAC5C0B,QAAQC,IAAIW,GACZ,IAAIC,EAAW,EAAKC,QAAQF,GAASrC,KAAI,SAACwC,EAAQC,GAEhD,OADAD,EAAOxD,GAAKyD,EACLD,KAELE,EAAgBT,KAAKU,KAAKL,EAASrB,OAAS,GAEhDH,EAAMf,QAAUuC,EAASM,MAAM,EAAGF,GAClC3B,EAAMhB,QAAUuC,EAASM,MAAMF,EAAeJ,EAASrB,QACvD,EAAKE,SAAS,CACZL,QACAC,QACAqB,MAAMA,EAAM,KAnQG,EAuQnB9B,kBAvQmB,sBAuQC,sBAAAuC,EAAA,sEACZ,EAAKxC,aADO,uBAEZ,EAAKF,aAFO,2CAvQD,EA4QnBK,UA5QmB,sBA4QP,sBAAAqC,EAAA,sEACJ,EAAKxC,aADD,uBAEJ,EAAKE,kBAFD,uBAGJ,EAAKJ,aAHD,2CA1QV,EAAKU,MAAQ,CACXJ,UAAU,EAEVqC,IAAK,GACLhC,MAAO,CACL9B,GAAI,EACJF,KAAM,IACNH,MAAO,SACPoB,QAAS,IAEXgB,MAAO,CACL/B,GAAI,EACJF,KAAM,IACNH,MAAO,UACPoB,QAAS,IAEXqC,MAAM,GAlBS,E,oDAkRXW,GAIN,IAHA,IAAIC,EAAMP,GAAS,EACjBxB,EAAS8B,EAAM9B,OACfgC,EAASC,MAAMjC,KACRwB,EAAQxB,GACf+B,EAAOf,KAAKC,MAAMD,KAAKE,UAAYM,EAAQ,IAC3CQ,EAAOR,GAASQ,EAAOD,GACvBC,EAAOD,GAAQD,EAAMN,GAEvB,OAAOQ,I,+BAGC,IAAD,EACiCE,KAAKtC,MAArCC,EADD,EACCA,MAAOC,EADR,EACQA,MAAO+B,EADf,EACeA,IAAKrC,EADpB,EACoBA,SAC3BgB,QAAQC,IAAIoB,GACSK,KAAKtC,MAAlBU,SACR,OACE,yBAAK9D,UAAU,iBACb,yBAAKA,UAAU,kCAEX,kBAAC,EAAD,CACEY,SAAU8E,KAAK9E,SAAS+E,KAAKD,MAC7BjF,WAAYiF,KAAKjF,WAAWkF,KAAKD,MACjC/E,eAAgB+E,KAAK/E,eAAegF,KAAKD,MACzChF,aAAcgF,KAAKhF,aAAaiF,KAAKD,MACrClD,IAAKa,EAAM9B,GAEXW,KAAMmB,EACNlB,UAAWuD,KAAKvD,UAAUwD,KAAKD,QAEnC,yBAAK1F,UAAU,qCACb,yBAAKA,UAAU,gDACb,yBAAK4F,IAAI,6EAA6EC,IAAI,YAG5F,yBAAK7F,UAAU,gDAA+C,uCAAa0F,KAAKtC,MAAMuB,QAGpF,kBAAC,EAAD,CACEjC,WAAYgD,KAAKhD,WAAWiD,KAAKD,MACjC/C,eAAgB+C,KAAK/C,eAAegD,KAAKD,MACzC9C,WAAY8C,KAAK9C,WAAW+C,KAAKD,MACjC5C,gBAAiB4C,KAAK5C,gBAAgB6C,KAAKD,MAC3C7C,kBAAmB6C,KAAK7C,kBAAkB8C,KAAKD,MAC/C3C,UAAW2C,KAAK3C,UAAU4C,KAAKD,MAC/B1C,SAAUA,KAOd,kBAAC,EAAD,CACEpC,SAAU8E,KAAK9E,SAAS+E,KAAKD,MAC7BjF,WAAYiF,KAAKjF,WAAWkF,KAAKD,MACjC/E,eAAgB+E,KAAK/E,eAAegF,KAAKD,MACzChF,aAAcgF,KAAKhF,aAAaiF,KAAKD,MACrClD,IAAKc,EAAM/B,GACXV,UAAWA,EACXqB,KAAMoB,EACNnB,UAAWuD,KAAKvD,UAAUwD,KAAKD,c,GAhV3BI,aCJEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhD,QAAQgD,MAAMA,EAAMC,c","file":"static/js/main.887d770c.chunk.js","sourcesContent":["import React from 'react'\n\nconst renderImage = (hero, banHero, isBanned) => {\n  if(hero.heroid !== undefined) {\n    return (\n      <div className=\"relative\" onClick={e => banHero(e, hero.heroid, isBanned)} style={{backgroundImage: `url('https://www.arenaofvalor.com/images/heroes/pic_122_122/${hero.heroid}.jpg')`}}>\n        { isBanned ? <div className=\"banned\"> <i className=\"fa fa-close fa-5x danger\"></i> </div>: ''}\n      </div>\n    )\n  }\n  return ''\n}\n\nconst Hero = ({\n  hero,\n  banHero,\n  isBanned\n}) => {\n  return hero ? renderImage(hero, banHero, isBanned) : 'No hero available.'\n}\n\nexport default Hero","import React from 'react'\nimport { Card, CardBody, Button, CardTitle, CardText, CardImg, FormGroup, Label, Input } from 'reactstrap'\nimport Hero from '../../HeroList/Hero/Hero'\n\nconst Member = ({\n  member,\n  teamId,\n  saveMember,\n  randomPosition,\n  removeMember,\n  onTyping,\n  positions\n}) => {\n  return (\n    <div className=\"mb-3\">\n      <Card>\n          { member.saved ? (\n            <CardBody>\n              <div className=\"d-flex justify-content-between\">\n                <div>\n                \n                  <CardTitle style={{ color:'#000' , fontWeight:'bold', textShadow:'2px 2px #ffc107'}}>{member.name}</CardTitle>\n\n                  {/* <CardText>{positions[member.position]}</CardText> */}\n                  <Button onClick={() => saveMember(member.id, teamId)}>Edit</Button>\n                  <Button onClick={() => removeMember(member.id, teamId)} className=\"ml-2\" color=\"danger\"> <i className=\"fa fa-close\"></i> </Button>\n                </div>\n              <Hero className=\"card-img-top\" hero={member.heroe} />\n              </div>\n            </CardBody>\n          ) : \n          (\n            <CardBody>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input type=\"text\" name=\"name\" value={member.name} onChange={e => onTyping(e, 'name', member.id, teamId)} placeholder=\"Name\" />\n              </FormGroup>\n              {/* <FormGroup>\n                <Label for=\"position\">Position</Label>\n                <Input type=\"select\" onChange={e => onTyping(e, 'position', member.id, teamId)} value={member.position}>\n                  { positions ? positions.map((position, index) => {\n                      return <option key={index} value={index}>{position}</option>\n                    }) : ''\n                  }\n                </Input>\n              </FormGroup> */}\n              <Button onClick={() => saveMember(member.id, teamId)} color=\"success\">Save</Button>\n              {/* <Button onClick={() => randomPosition(member.id, teamId)} className=\"ml-2\">\n                  <i className=\"fa fa-refresh\"></i>\n              </Button> */}\n            </CardBody>\n          )\n        }\n      </Card>\n    </div>\n  )\n}\n\nexport default Member","import React from 'react'\nimport { Badge, Button } from 'reactstrap';\nimport Member from './Member/Member'\n\nconst Team = ({\n  data,\n  positions,\n  onTyping,\n  randomPosition,\n  removeMember,\n  saveMember,\n  addMember\n}) => {\n  return (\n    <div className=\"w-25\">\n      <div className=\"d-flex flex-column\">\n        <h2 className=\"text-center\">\n          <Badge color={data.color}>{ data.name }</Badge>\n        </h2>\n        <Button color=\"success\" outline onClick={() => addMember(data.id)}> Add Member </Button>\n      </div>\n      <div className=\"mt-4\">\n        {\n          data.members ? data.members.map(member => {\n            return <Member teamId={data.id} positions={positions} onTyping={onTyping} removeMember={removeMember} saveMember={saveMember} randomPosition={randomPosition} key={member.id} member={member} />\n          }) : ''\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Team","import React from 'react'\nimport { Button } from 'reactstrap'\n\nconst Menu = ({\n  randomHero,\n  toggleSameHero,\n  randomTeam,\n  randomTeamAndHero,\n  randomPositions,\n  randomAll,\n  samehero\n}) => {\n  return (\n    <div className=\"mt-5 d-flex flex-column w-50 mx-auto\">\n      {/* <Button className=\"mt-3\" color={`${samehero ? 'success' : 'danger'}`} active={samehero} outline onClick={() => toggleSameHero()}> Same Hero </Button> */}\n      <hr/>\n      {/* <Button className=\"mt-3\" color=\"primary\" onClick={() => randomHero()}> Random Hero </Button> */}\n      <Button className=\"mt-3\" color=\"warning\" onClick={() => randomTeam()}> Random Team</Button>\n      {/* <Button className=\"mt-3\" color=\"info\" onClick={() => randomPositions()}> Random Position</Button> */}\n      {/* <Button className=\"mt-3\" color=\"warning\" onClick={() => randomTeamAndHero()}> Random Team&Hero</Button> */}\n      {/* <Button className=\"mt-3\" color=\"danger\" onClick={() => randomAll()}> Random All</Button> */}\n    </div>\n  )\n}\n\nexport default Menu","import React, { Component } from 'react';\nimport './App.css';\n// import Herolist from './components/HeroList/Herolist'\nimport Team from './components/Team/Team'\nimport Menu from './components/Menu/Menu'\n// import Heroes from './Heroes'\n\nconst positions = [\n  'tank',\n  'fighter',\n  'jungle',\n  'mage',\n  'carry',\n  'support'\n]\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      samehero: false,\n      // herolist: Heroes.data,\n      ban: [],\n      teamA: {\n        id: 1,\n        name: 'A',\n        color: 'danger',\n        members: []\n      },\n      teamB: {\n        id: 2,\n        name: 'B',\n        color: 'primary',\n        members: []\n      },\n      count:0\n    }\n  }\n\n  addMember = (team) => {\n    const { teamA, teamB } = this.state\n\n    const member = {\n      name: '',\n      position: 0,\n      saved: false,\n      heroe: {}\n    }\n\n    if (team === 1) {\n      member.id = teamA.members.length + 1\n      teamA.members.push(member)\n      this.setState({\n        teamA\n      })\n    } else {\n      member.id = teamB.members.length + 1\n      teamB.members.push(member)\n      this.setState({\n        teamB\n      })\n    }\n  }\n\n  onTyping = (e, key, id, team) => {\n    e.preventDefault()\n    const { teamA, teamB } = this.state\n\n    if (team === 1) {\n      teamA.members = teamA.members.map(member => {\n        if (member.id === id) {\n          member[key] = e.target.value\n        }\n        return member\n      })\n      this.setState({\n        teamA\n      })\n    } else {\n      teamB.members = teamB.members.map(member => {\n        if (member.id === id) {\n          member[key] = e.target.value\n        }\n        return member\n      })\n      this.setState({\n        teamB\n      })\n    }\n  }\n\n  saveMember = (id, team) => {\n    const { teamA, teamB } = this.state\n\n    if (team === 1) {\n      teamA.members = teamA.members.map(member => {\n        if (member.id === id) {\n          member['saved'] = !member.saved\n        }\n        return member\n      })\n      this.setState({\n        teamA\n      })\n    } else {\n      teamB.members = teamB.members.map(member => {\n        if (member.id === id) {\n          member['saved'] = !member.saved\n        }\n        return member\n      })\n      this.setState({\n        teamB\n      })\n    }\n  }\n\n  removeMember = (id, team) => {\n    const { teamA, teamB } = this.state\n\n    if (team === 1) {\n      teamA.members = teamA.members.filter(member => member.id !== id)\n      this.setState({\n        teamA\n      })\n    } else {\n      teamB.members = teamB.members.filter(member => member.id !== id)\n      this.setState({\n        teamB\n      })\n    }\n  }\n\n  randomHero = () => {\n    const { herolist, samehero, teamA, teamB } = this.state\n    this.randomAlgor(teamA.members, teamB.members, herolist, samehero)\n    console.log(teamA, teamB)\n    this.setState({\n      teamA,\n      teamB,\n    })\n  }\n\n  randomAlgor = (Amembers, Bmembers, herolist, samehero) => {\n    console.log(samehero);\n\n    if (samehero) {\n\n      const temp = herolist\n\n      Amembers = Amembers.map(member => {\n        const filtered = herolist.filter(hero => (hero.job === (parseInt(member.position) + 1)))\n        member.heroe = filtered[Math.floor(Math.random() * filtered.length)]\n        herolist = herolist.filter(hero => {\n          return member.heroe ? (hero.heroid !== member.heroe.heroid) : true\n        })\n        return member\n      })\n\n      herolist = temp\n\n      Bmembers = Bmembers.map(member => {\n        const filtered = herolist.filter(hero => (hero.job === (parseInt(member.position) + 1)))\n        member.heroe = filtered[Math.floor(Math.random() * filtered.length)]\n        herolist = herolist.filter(hero => {\n          return member.heroe ? (hero.heroid !== member.heroe.heroid) : true\n        })\n        return member\n      })\n\n    } else {\n      Amembers = Amembers.map(member => {\n        const filtered = herolist.filter(hero => (hero.job === (parseInt(member.position) + 1)))\n        member.heroe = filtered[Math.floor(Math.random() * filtered.length)]\n        herolist = herolist.filter(hero => {\n          return member.heroe ? (hero.heroid !== member.heroe.heroid) : true\n        })\n        return member\n      })\n\n      Bmembers = Bmembers.map(member => {\n        const filtered = herolist.filter(hero => (hero.job === (parseInt(member.position) + 1)))\n        member.heroe = filtered[Math.floor(Math.random() * filtered.length)]\n        herolist = herolist.filter(hero => {\n          return member.heroe ? (hero.heroid !== member.heroe.heroid) : true\n        })\n        return member\n      })\n    }\n    this.setState({\n      teamA: Amembers,\n      teamB: Bmembers\n    })\n    console.log('list', herolist)\n\n  }\n\n  // banHero = (e, id, isBanned) => {\n  //   e.preventDefault()\n  //   if(isBanned) {\n  //     this.setState({\n  //       ban: this.state.ban.filter(hero => hero.heroid != id),\n  //       herolist: [...this.state.herolist, ...Heroes.data.filter(hero => hero.heroid === id)]\n  //     })\n  //   } else {\n  //     this.setState({\n  //       ban: [...this.state.ban, ...Heroes.data.filter(hero => hero.heroid === id)],\n  //       herolist: this.state.herolist.filter(hero => hero.heroid != id)\n  //     })\n  //   }\n  // }\n\n  randomPosition = (id, team) => {\n    const { teamA, teamB } = this.state\n\n    if (team === 1) {\n      teamA.members = teamA.members.map(member => {\n        if (member.id === id) {\n          member.position = Math.floor(Math.random() * 6)\n        }\n        return member\n      })\n      this.setState({\n        teamA\n      })\n    } else {\n      teamB.members = teamB.members.map(member => {\n        if (member.id === id) {\n          member.position = Math.floor(Math.random() * 6)\n        }\n        return member\n      })\n      this.setState({\n        teamB\n      })\n    }\n  }\n\n  randomPositions = () => {\n    const { teamA, teamB } = this.state\n    teamA.members = teamA.members.map(member => {\n      member.position = Math.floor(Math.random() * 6)\n      return member\n    })\n    teamB.members = teamB.members.map(member => {\n      member.position = Math.floor(Math.random() * 6)\n      return member\n    })\n\n    this.setState({\n      teamA,\n      teamB\n    })\n  }\n\n  toggleSameHero = () => {\n    this.setState({\n      samehero: !this.state.samehero\n    })\n  }\n\n  randomTeam = () => {\n    const { teamA, teamB, count } = this.state\n    const players = [...teamA.members, ...teamB.members]\n    console.log(players)\n    let shuffled = this.shuffle(players).map((player, index) => {\n      player.id = index\n      return player\n    })\n    let halfWayThough = Math.ceil(shuffled.length / 2)\n\n    teamA.members = shuffled.slice(0, halfWayThough);\n    teamB.members = shuffled.slice(halfWayThough, shuffled.length);\n    this.setState({\n      teamA,\n      teamB,\n      count:count+1\n    })\n  }\n\n  randomTeamAndHero = async () => {\n    await this.randomTeam()\n    await this.randomHero()\n  }\n\n  randomAll = async () => {\n    await this.randomTeam()\n    await this.randomPositions()\n    await this.randomHero()\n  }\n\n  shuffle(array) {\n    var rand, index = -1,\n      length = array.length,\n      result = Array(length);\n    while (++index < length) {\n      rand = Math.floor(Math.random() * (index + 1));\n      result[index] = result[rand];\n      result[rand] = array[index];\n    }\n    return result;\n  }\n\n  render() {\n    const { teamA, teamB, ban, samehero } = this.state\n    console.log(ban)\n    const { herolist } = this.state\n    return (\n      <div className=\"container p-5\">\n        <div className=\"d-flex justify-content-between\">\n          {\n            <Team\n              onTyping={this.onTyping.bind(this)}\n              saveMember={this.saveMember.bind(this)}\n              randomPosition={this.randomPosition.bind(this)}\n              removeMember={this.removeMember.bind(this)}\n              key={teamA.id}\n              // positions={positions}\n              data={teamA}\n              addMember={this.addMember.bind(this)} />\n          }\n          <div className=\"mt-5 d-flex flex-column w-50 px-2\">\n            <div className=\"d-flex flex-wrap mt-3 justify-content-center\">\n              <img src=\"https://www.marvelsuperwar.com/m/zt/20190917153904/th/img/LOGO_dd2b88c.png\" alt=\"marvel\" />\n              \n            </div>\n            <div className=\"d-flex flex-wrap mt-3 justify-content-center\"><h3>Round : {this.state.count}</h3></div>\n            \n            {\n              <Menu\n                randomHero={this.randomHero.bind(this)}\n                toggleSameHero={this.toggleSameHero.bind(this)}\n                randomTeam={this.randomTeam.bind(this)}\n                randomPositions={this.randomPositions.bind(this)}\n                randomTeamAndHero={this.randomTeamAndHero.bind(this)}\n                randomAll={this.randomAll.bind(this)}\n                samehero={samehero}\n              />\n            }\n\n            {/* { <Herolist banned={ban} banHero={this.banHero.bind(this)} heroes={Heroes.data} /> } */}\n          </div>\n          {\n            <Team\n              onTyping={this.onTyping.bind(this)}\n              saveMember={this.saveMember.bind(this)}\n              randomPosition={this.randomPosition.bind(this)}\n              removeMember={this.removeMember.bind(this)}\n              key={teamB.id}\n              positions={positions}\n              data={teamB}\n              addMember={this.addMember.bind(this)} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}